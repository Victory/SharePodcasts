group 'sharepodcasts'
version '1.0.12'


apply plugin: 'java'
apply plugin: "com.fizzed.rocker"
apply plugin: 'idea'
apply plugin: "application"

sourceCompatibility = 1.8
mainClassName = "org.dfhu.sharepodcasts.SharePodcasts"

sourceSets {
    main {
        rocker {
            srcDir('src/main/java')
        }
    }
    test {
       java {
         srcDir('src/test')
       }
    }
}

rocker {
    // skips building templates all together
    skip false
    // Directory where java files are created
    outputBaseDirectory = buildDir.toString() + "/generated/source/apt"
    // Directory where the java classes are generated and stores rocker-compiler.conf (used by RockerRuntime.getInstance().setReloading(true))
    classBaseDirectory = buildDir.toString() + "/classes"

    failOnError true
    skipTouch true
    // must not be empty when skipTouch is equal to false
    touchFile ""
    javaVersion '1.8'
    extendsClass null
    extendsModelClass 'org.dfhu.sharepodcasts.templateengine.BaseModel'
    optimize null
    discardLogicWhitespace null
    targetCharset null
    suffixRegex null
    postProcessing null
}

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter() // Needed for plugin's dependencies
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "gradle.plugin.com.fizzed:rocker-gradle-plugin:0.19.0"
    }
}

task concatinateVendor() {
    def jsDir = new File("src/main/resources/public/js");
    if (!jsDir.exists()) {
       jsDir.mkdirs();
    }

    def jsOut = new File(jsDir, "vendor.js")
    jsOut.write ""
    def jsFiles = [
            "node_modules/jquery/dist/jquery.js",
            "node_modules/bootstrap/dist/js/bootstrap.js",
            "node_modules/bootstrap-material-design/dist/js/material.js",
            "node_modules/bootstrap-material-design/dist/js/ripples.js",
    ]
    jsFiles.each {jsOut << new File(it).text + "\n;\n"}

    copy {
        from "node_modules/bootstrap/dist/fonts"
        into "src/main/resources/public/fonts"
        include "*eot"
        include "*svg"
        include "*ttf"
        include "*woff"
        include "*woff2"
    }

    def cssOut = new File("src/main/resources/public/css/vendor.css")
    cssOut.write ""
    def cssFiles = [
            "node_modules/bootstrap/dist/css/bootstrap.css",
            "node_modules/bootstrap-material-design/dist/css/bootstrap-material-design.css",
            "node_modules/bootstrap-material-design/dist/css/ripples.css",
    ]
    cssFiles.each {cssOut << new File(it).text + "\n"}
}

task compileWebpack(type:Exec) {
    inputs.files "src/main/javascript"
    commandLine "bash", "webpack.sh"
}

task compileWebpackOptimized(type:Exec) {
    inputs.files "src/main/javascript"
    commandLine "bash", "webpack.sh", "--optimize-minimize"
}

test {
    include 'org/dfhu/**'
    testLogging {
        events "passed", "skipped", "failed" 
    }
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
    dependsOn 'cleanTest'
}

dependencies {

    compile group: "com.sparkjava",
            name: "spark-core",
            version: "2.5.4"

    compile group: 'com.fizzed',
            name: 'rocker-compiler',
            version: '0.14.0'

    compile group: 'com.fizzed',
            name: 'rocker-runtime',
            version: '0.14.0'

    compile group: 'org.slf4j',
            name: 'slf4j-simple',
            version: '1.6.1'

    compile group: 'com.google.code.gson',
            name: 'gson',
            version: '2.8.0'

    compile group: 'org.jsoup',
            name: 'jsoup',
            version: '1.7.2'

    compile group: 'org.mongodb.morphia',
            name: 'morphia',
            version: '1.3.2'

    // Testing libraries
    compile group: 'org.apache.httpcomponents',
        name: 'httpclient',
        version: '4.5.1'

    compile group: 'org.powermock',
            name: 'powermock-mockito-release-full',
            version: '1.5.4'

    compile group: 'junit',
            name: 'junit',
            version: '4.11'
}
